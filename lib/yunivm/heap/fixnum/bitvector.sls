(library (yunivm heap fixnum bitvector)
         (export make-bitvector)
         (import (yuni scheme))

(define bits (vector 1 2 4 8 16 32 64 128))
         
(define (make-bitvector len)
  (define bytecount (quotient (+ len 7) 8))
  (define bv (make-bytevector bytecount 0))
  (define (clear)
    (let loop ((idx 0))
      (unless (= idx bytecount)
        (bytevector-u8-set! bv idx 0)
        (loop (+ 1 idx)))))
  (define (%bitset? b bitpos)
    (odd? (quotient b (vector-ref bits bitpos))))

  (define (check idx)
    (let ((bitpos (remainder idx 8))
          (bytepos (quotient idx 8)))
      (%bitset? (bytevector-u8-ref bv bytepos) bitpos)))
  (define (set idx)
    (let ((bitpos (remainder idx 8))
          (bytepos (quotient idx 8)))
      (let ((b (bytevector-u8-ref bv bytepos)))
       (unless (%bitset? b bitpos)
         (bytevector-u8-set! bv bytepos (+ (vector-ref bits bitpos) b))))))
  (define (unset idx)
    (let ((bitpos (remainder idx 8))
          (bytepos (quotient idx 8)))
      (let ((b (bytevector-u8-ref bv bytepos)))
       (when (%bitset? b bitpos)
         (bytevector-u8-set! bv bytepos (- b (vector-ref bits bitpos)))))))

  (define (query sym)
    (case sym
      ((CLEAR) clear)
      ((CHECK) check)
      ((SET) set)
      ((UNSET) unset)
      (else (error "Unknown symbol"))))
  query)

)
