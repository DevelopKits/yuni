(library (yunivm heap fixnum objpool)
         (export make-objpool)
         (import (yuni scheme)
                 (yunivm heap fixnum bitvector)
                 )

         
(define (make-objpool size)
  (define bitvec (make-bitvector size))
  (define bitvec-set! (bitvec 'SET))
  (define bitvec-clear! (bitvec 'CLEAR))
  (define bitvec-set? (bitvec 'CHECK))
  (define vec (make-vector size #f))
  (define vec-finalizer (make-vector size #f))
  (define max-used 0)
  (define (register obj finalizer) ;; => idx
    (let loop ((idx max-used))
     (cond
       ((= idx size)
        (error "objpool overflow"))
       ((vector-ref vec idx)
        (loop (+ 1 idx)))
       (else
         (vector-set! vec idx obj)
         (vector-set! vec-finalizer idx finalizer)
         (set! max-used idx)
         idx))))
  (define (fetch idx)
    (vector-ref vec idx))
  (define (clear-mark)
    (bitvec-clear!))
  (define (mark idx)
    (bitvec-set! idx))
  (define (sweep)
    (let loop ((idx 0))
     (unless (= idx size)
       (unless (bitvec-set? idx)
         (let ((finalizer (vector-ref vec-finalizer idx))
               (obj (vector-ref vec idx)))
          (when finalizer
            (finalizer obj)))
         (vector-set! vec-finalizer idx #f)
         (vector-set! vec idx #f))
       (loop (+ idx 1))))
    (set! max-used 0)
    (clear-mark))

  (define (query sym)
    (case sym
      ((REGISTER) register)
      ((FETCH) fetch)
      ((CLEAR-MARK) clear-mark)
      ((MARK) mark)
      ((SWEEP) sweep)
      (else (error "Unknown symbol" sym))))
  
  query)
)
